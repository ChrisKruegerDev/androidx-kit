apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

def config = rootProject.ext

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId "com.placebox"
            artifactId "androidx"
            name 'androidx'
            description 'Placebox AndroidX library'
            version '1.0.0'
        }
    }
}


bintray {
    user = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('BINTRAY_API_KEY') ? project.property('BINTRAY_API_KEY') : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives']

    pkg {
        repo = 'maven'
        name = 'androidx'
        userOrg = "placebox"
        licenses = ['MIT']
        websiteUrl = 'https://github.com/PlaceboxApp/placebox-androidx'
        vcsUrl = 'https://github.com/PlaceboxApp/placebox-androidx.git'
        version {
            name = '1.0.0'
            desc = 'Placebox AndroidX version ' + config.versionName
            released  = new Date()
            vcsTag = '1.0.0'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    useLibrary 'android.test.runner'

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion

        versionName config.versionName
        versionCode config.versionCode

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xallow-result-return-type"]
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

    androidExtensions {
        experimental = true
    }

    lintOptions {
        // for CI server: only check this module with dependencies instead of each module separately
        checkDependencies true
        // for CI server: log reports (report files are not public)
        textReport true
    }

    android {
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    configurations {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }

}

dependencies {
    Map<String, String> dependencies = config.dependencies

    // kotlin
    implementation dependencies.kotlin
    implementation dependencies.kotlinReflect
}
